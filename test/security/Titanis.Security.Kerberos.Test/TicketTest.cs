using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Titanis.Security.Kerberos.Test;

[TestClass]
public class TicketTest
{
	[Microsoft.VisualStudio.TestTools.UnitTesting.TestMethod]
	public void TestKirbi()
	{
		KerberosClient client = new KerberosClient(null);
		var tickets = client.LoadTicketsFromFile(TgtBytes, out var format);

		var actual = client.ExportTickets(tickets, KerberosFileFormat.Kirbi);

		CollectionAssert.AreEqual(TgtBytes, actual);
	}

	private static readonly byte[] TgtBytes = BinaryHelper.ParseHexString("7682058830820584a003020105a103020116a28204a6308204a26182049e3082049aa003020105a10b1b094c554d4f4e2e494e44a21e301ca003020102a11530131b066b72627467741b094c554d4f4e2e494e44a382046430820460a003020112a103020102a28204520482044e33940f197dc393e0462fb32d201ab7afbbee533f49cfea7776618974960fe6e0b7b584ce9c78a944fbaff48e5b1b628609421ed4dce4cf8a8d6f6bd37f1471e97849e7745fcc2a481fda6ab7f76e52c748f5500f12f2e15fc8ef57da255dcc4b9ff73b1f8d0e203fa5eca2d79ac49615f2b7e66d178e4f2917e957334d10fa24da4b8f716e74af8b03655bb570cdc64e47fc18114dc5778e2de5f71120377e4e01397b215167ba3d295b9d365a1d41a5a19ec62f4c1e5761b6c70ca091f70ceac16575900c847b4176a37a9414a716475ab4c9433888281f00989e17a687a9436ed4af2cbe46d854cdb6fe2ca3c0f25b06d11e0d492ae6a89bd12571b6421f930480b7ada275671da42115887d54df8df2d803a8eb2f34f78648cb4deb54dea479533a880999886c05cd4f817f3e40d0a13efd8abe4d2896f921da97f8747049a435f8e6a352387f843df3b35b0cff135de39363420411dc8691b543257fc970a13783daa4aef51e92cae6099814b7633e1663311f6dcd033af1a63e00c767ab559002da79bc294f72b4967f10ba0a8eab77f3034df73b69c24d1d5eaffc6faf6fb772594052a797bcd4b4358ded8facc674edbbc3f80dfe58e290a33d479bb864f594aeea9b92bf91a798148016b4d30ed63ff7bd398be8dc56232952def5a3205e754d06d180a1867dfa37d196b2cd1ad136c4c9c29f119daa8048577651bb1d41363283a61524cf621baafd5c49dd803edabdd7682b6a278c69e4b8761b9846915712dc256bdf4fc1ac5da811476179f4123cf35a929b5cbadaf602f1eea75a7de4e795ad9f950b38f4273bcaf57bbec2cdfcffe7d13934e89daf198d0479d78afe8daeecca0cfd49c4f02e6e99f274878b67edf894f5ded8aec485ce20ad7f3fb09c597f38ab1f8111a679ad719a19aab85a5a832fbafd728b5cc60022a61e5167f67a7548fcc9430282681073966909a1689a6cc0214cd682c1e82e8f8de23beaf4aea3b15418689bf783f5cdb279a164803e2df14aab277684b1de49a6028e11a43edcff1f40bc62a08c6248b5459247891f1d727abf1c3c5dedb543f486db6c5e81fcd49eb157e438faf20b0db8bc738f1f744550527c67302fbe5ef8e2009d132136e3cf7e7a50e8b137e0711ae6f2009f62e276a181a83dcb212900db3c69692bd01ba679ed36711714714e344de881c5d74709d689376200bc04472ec05f9e2941a8c29cbdf1824600db540756b8e6378f12852e72be591300c94cd4c6871e68f0a4ba5666fca606e814de1ecd3d4c04a195f1bc9526f71ef4c91f2424c9a7d74017e2c5d41743747268d973a10b2cdc61d0e4727ee7cce13af378a2c278caab2f45331889558717f230bd2752d2162ce56fa5c4c41c8a68f6651f1704e18faff875d37420e82ded76360e6cdc4108ff96a2d86a3ca14cad7f742d8479861c256544cea753eefe8e6ed36a1f5aa6269e2dfe55bb1136642ebf295973f895f246a2e43b5e8996293b781de320cdbdbc8cfef546d7a9092b1453a05a195f702f20d5ca716c531c37d014a381cd3081caa003020100a281c20481bf7d81bc3081b9a081b63081b33081b0a01b3019a003020117a112041049d0b76129c4d9cff0b936764c8de67ca10b1b094c554d4f4e2e494e44a2153013a003020101a10c300a1b086d696c636869636ba30703050040e10000a511180f32303235303831393230313630385aa611180f32303235303832303036313630385aa711180f32303235303832363230313630385aa80b1b094c554d4f4e2e494e44a91e301ca003020102a11530131b066b72627467741b094c554d4f4e2e494e44");

	[TestMethod]
	public void TestCcache()
	{
		var bytes = CcacheBytes;

		KerberosClient client = new KerberosClient(null);
		var tickets = client.LoadTicketsFromFile(bytes, out var format);

		var actual = client.ExportTickets(tickets, KerberosFileFormat.Ccache);

		CollectionAssert.AreEqual(CcacheBytes, actual);
	}

	private static readonly byte[] CcacheBytes = BinaryHelper.ParseHexString("0504000c00010008ffffffff000000000000000100000001000000094c554d4f4e2e494e44000000086d696c636869636b0000000100000001000000094c554d4f4e2e494e44000000086d696c636869636b0000000200000002000000094c554d4f4e2e494e44000000066b7262746774000000094c554d4f4e2e494e4400170000001049d0b76129c4d9cff0b936764c8de67c68a4db8868a4db8868a5682868ae16080040e100000000000000000000000004a26182049e3082049aa003020105a10b1b094c554d4f4e2e494e44a21e301ca003020102a11530131b066b72627467741b094c554d4f4e2e494e44a382046430820460a003020112a103020102a28204520482044e33940f197dc393e0462fb32d201ab7afbbee533f49cfea7776618974960fe6e0b7b584ce9c78a944fbaff48e5b1b628609421ed4dce4cf8a8d6f6bd37f1471e97849e7745fcc2a481fda6ab7f76e52c748f5500f12f2e15fc8ef57da255dcc4b9ff73b1f8d0e203fa5eca2d79ac49615f2b7e66d178e4f2917e957334d10fa24da4b8f716e74af8b03655bb570cdc64e47fc18114dc5778e2de5f71120377e4e01397b215167ba3d295b9d365a1d41a5a19ec62f4c1e5761b6c70ca091f70ceac16575900c847b4176a37a9414a716475ab4c9433888281f00989e17a687a9436ed4af2cbe46d854cdb6fe2ca3c0f25b06d11e0d492ae6a89bd12571b6421f930480b7ada275671da42115887d54df8df2d803a8eb2f34f78648cb4deb54dea479533a880999886c05cd4f817f3e40d0a13efd8abe4d2896f921da97f8747049a435f8e6a352387f843df3b35b0cff135de39363420411dc8691b543257fc970a13783daa4aef51e92cae6099814b7633e1663311f6dcd033af1a63e00c767ab559002da79bc294f72b4967f10ba0a8eab77f3034df73b69c24d1d5eaffc6faf6fb772594052a797bcd4b4358ded8facc674edbbc3f80dfe58e290a33d479bb864f594aeea9b92bf91a798148016b4d30ed63ff7bd398be8dc56232952def5a3205e754d06d180a1867dfa37d196b2cd1ad136c4c9c29f119daa8048577651bb1d41363283a61524cf621baafd5c49dd803edabdd7682b6a278c69e4b8761b9846915712dc256bdf4fc1ac5da811476179f4123cf35a929b5cbadaf602f1eea75a7de4e795ad9f950b38f4273bcaf57bbec2cdfcffe7d13934e89daf198d0479d78afe8daeecca0cfd49c4f02e6e99f274878b67edf894f5ded8aec485ce20ad7f3fb09c597f38ab1f8111a679ad719a19aab85a5a832fbafd728b5cc60022a61e5167f67a7548fcc9430282681073966909a1689a6cc0214cd682c1e82e8f8de23beaf4aea3b15418689bf783f5cdb279a164803e2df14aab277684b1de49a6028e11a43edcff1f40bc62a08c6248b5459247891f1d727abf1c3c5dedb543f486db6c5e81fcd49eb157e438faf20b0db8bc738f1f744550527c67302fbe5ef8e2009d132136e3cf7e7a50e8b137e0711ae6f2009f62e276a181a83dcb212900db3c69692bd01ba679ed36711714714e344de881c5d74709d689376200bc04472ec05f9e2941a8c29cbdf1824600db540756b8e6378f12852e72be591300c94cd4c6871e68f0a4ba5666fca606e814de1ecd3d4c04a195f1bc9526f71ef4c91f2424c9a7d74017e2c5d41743747268d973a10b2cdc61d0e4727ee7cce13af378a2c278caab2f45331889558717f230bd2752d2162ce56fa5c4c41c8a68f6651f1704e18faff875d37420e82ded76360e6cdc4108ff96a2d86a3ca14cad7f742d8479861c256544cea753eefe8e6ed36a1f5aa6269e2dfe55bb1136642ebf295973f895f246a2e43b5e8996293b781de320cdbdbc8cfef546d7a9092b1453a05a195f702f20d5ca716c531c37d01400000000"
);
}
