//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Titanis.Security.Spnego.Asn1.GSS_API
{
    using System;
    using System.Collections.Generic;
    using Titanis.Asn1;
    using Titanis.Asn1.Metadata;
    using Titanis.Asn1.Serialization;


    public class GSS_APIModule
    {

        private static GSS_APIModule _instance = new GSS_APIModule();

        private GSS_APIModule()
        {
        }

        public static GSS_APIModule Instance
        {
            get
            {
                return _instance;
            }
        }
    }

    public class InitialContextToken_Unnamed_0 : IAsn1DerEncodableTlv
    {

        public Titanis.Asn1.Asn1Oid thisMech;

        public Titanis.Asn1.Asn1Any innerContextToken;

        public virtual Asn1Tag Tag
        {
            get
            {
                return (new Asn1Tag(48));
            }
        }

        public virtual void DecodeTlv(Asn1DerDecoder decoder)
        {
            var end_struc_0 = decoder.DecodeTlvStart((new Asn1Tag(48)));
            this.DecodeValue(decoder);
            decoder.CloseTlv(end_struc_0);
        }

        public virtual void DecodeValue(Asn1DerDecoder decoder)
        {
            var end_thisMech_1 = decoder.DecodeTlvStart((new Asn1Tag(6)));
            this.thisMech = decoder.DecodeOid();
            decoder.CloseTlv(end_thisMech_1);
            this.innerContextToken = new Asn1Any();
            this.innerContextToken.DecodeTlv(decoder);
        }

        public virtual bool TryDecodeTlv(Asn1DerDecoder decoder)
        {
            if (decoder.CheckTag((new Asn1Tag(48))))
            {
                this.DecodeTlv(decoder);
                return true;
            }
            else
            {
                return false;
            }
        }

        public virtual void EncodeValue(Asn1DerEncoder encoder)
        {
            var end_innerContextToken_1 = encoder.Position;
            this.innerContextToken.EncodeValue(encoder);
            encoder.EncodeCloseTlvHeader(this.innerContextToken.Tag, end_innerContextToken_1);
            var end_thisMech_1 = encoder.Position;
            encoder.EncodeOid(this.thisMech);
            encoder.EncodeCloseTlvHeader((new Asn1Tag(6)), end_thisMech_1);
        }
    }
}
