//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Titanis.Security.Spnego {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Titanis.Security.Spnego.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This context has already been initialized and cannot be initialized again..
        /// </summary>
        internal static string Spnego_AlreadyInitialized {
            get {
                return ResourceManager.GetString("Spnego_AlreadyInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The context is incomplete..
        /// </summary>
        internal static string Spnego_ContextIncomplete {
            get {
                return ResourceManager.GetString("Spnego_ContextIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server returned an invalid response token..
        /// </summary>
        internal static string Spnego_InvalidRespToken {
            get {
                return ResourceManager.GetString("Spnego_InvalidRespToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The context did not provide a mech OID, which is required for SP-Nego..
        /// </summary>
        internal static string Spnego_NoContextMechOid {
            get {
                return ResourceManager.GetString("Spnego_NoContextMechOid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SP-Nego context does not have any security contexts to negotiate with..
        /// </summary>
        internal static string Spnego_NoContexts {
            get {
                return ResourceManager.GetString("Spnego_NoContexts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server did not return a list of supported mechanisms..
        /// </summary>
        internal static string Spnego_NoInitMechs {
            get {
                return ResourceManager.GetString("Spnego_NoInitMechs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected context does not provide a mechanism OID..
        /// </summary>
        internal static string Spnego_NoMechOid {
            get {
                return ResourceManager.GetString("Spnego_NoMechOid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No context was selected to negotiate with..
        /// </summary>
        internal static string Spnego_NoSelectedContext {
            get {
                return ResourceManager.GetString("Spnego_NoSelectedContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The context does not match any mechanisms supported by the server..
        /// </summary>
        internal static string Spnego_NoSupportedMechs {
            get {
                return ResourceManager.GetString("Spnego_NoSupportedMechs", resourceCulture);
            }
        }
    }
}
