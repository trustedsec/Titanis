using System;
using System.Collections.Generic;
using System.Reflection;
using System.Reflection.Emit;
using System.Text;

namespace Titanis.Dynamic
{
	public interface IMsilMachine
	{
		void Add();
		void Ldloc_S(byte index);
		void Ldloca(short index);
		void Ldnull();
		void Ldobj(Type type);
		void Ldsfld(FieldInfo field);
		void Ldsflda(FieldInfo field);
		void Ldstr(string str);
		void Ldtoken(MethodInfo method);
		void Ldtoken(FieldInfo field);
		void Ldtoken(Type type);
		void Ldvirtftn(MethodInfo method);
		void Leave(Label target);
		void Ldloc_3();
		void Leave_S(Label target);
		void Mkrefany(Type type);
		void Mul();
		void Mul_Ovf();
		void Mul_Ovf_Un();
		void Neg();
		void Newarr(Type elementType);
		void Newobj(ConstructorInfo constructor);
		void Nop();
		void Not();
		void Or();
		void Pop();
		void Localloc();
		void Ldloc_2();
		void Ldloc_1();
		void Ldloc_0();
		void Ldelem_I4();
		void Ldelem_I8();
		void Ldelem_R4();
		void Ldelem_R8();
		void Ldelem_Ref(object arg);
		void Ldelem_U1();
		void Ldelem_U2();
		void Ldelem_U4();
		void Ldelema(Type elementType);
		void Ldfld(FieldInfo field);
		void Ldflda(FieldInfo field);
		void Ldftn(MethodInfo method);
		void Ldind_I();
		void Ldind_I1();
		void Ldind_I2();
		void Ldind_I4();
		void Ldind_I8();
		void Ldind_R4();
		void Ldind_R8();
		void Ldind_Ref();
		void Ldind_U1();
		void Ldind_U2();
		void Ldind_U4();
		void Ldlen();
		void Ldloc(short index);
		void Ldloc(LocalBuilder loc);
		void Ldelem_I2();
		void Stind_I2();
		void Stind_I4();
		void Stind_I8();
		void Stind_R4();
		void Stind_R8();
		void Stind_Ref();
		void Stloc(LocalBuilder loc);
		void Stloc(short index);
		void Stloc_0();
		void Stloc_1();
		void Stloc_2();
		void Stloc_3();
		void Stind_I1();
		void Stloc_S(byte index);
		void Stsfld(FieldInfo field);
		void Sub();
		void Sub_Ovf();
		void Sub_Ovf_Un();
		void Switch(Label[] targets);
		void Tailcall();
		void Throw();
		void Unaligned(byte alignment);
		void Unbox(Type type);
		void Unbox_Any(Type type);
		void Volatile();
		void Stobj(Type type);
		void Stind_I();
		void Stfld(FieldInfo field);
		void Stelem_Ref();
		void Readonly();
		void Refanytype();
		void Refanyval();
		void Rem();
		void Rem_Un();
		void Ret();
		void Rethrow();
		void Shl();
		void Shr();
		void Shr_Un();
		void Sizeof(Type valueType);
		void Starg(short index);
		void Starg_S(byte index);
		void Stelem(Type elementType);
		void Stelem_I();
		void Stelem_I1();
		void Stelem_I2();
		void Stelem_I4();
		void Stelem_I8();
		void Stelem_R4();
		void Stelem_R8();
		void Xor();
		void Ldelem_I1();
		void Ldelem(Type elementType);
		void Brfalse_S(Label target);
		void Brtrue(Label target);
		void Brtrue_S(Label target);
		void Call(MethodInfo method);
		void Call(ConstructorInfo constructor);
		void Callvirt(MethodInfo method);
		void Castclass(Type type);
		void Ceq();
		void Cgt();
		void Cgt_Un();
		void Ckfinite();
		void Brfalse(Label target);
		void Clt();
		void Constrained(Type type);
		void Conv_I();
		void Conv_I1();
		void Conv_I2();
		void Conv_I4();
		void Conv_I8();
		void Conv_Ovf_I();
		void Conv_Ovf_I_Un();
		void Conv_Ovf_I1();
		void Conv_Ovf_I1_Un();
		void Conv_Ovf_I2();
		void Clt_Un();
		void Break();
		void Br_S(Label target);
		void Br(Label target);
		void Add_Ovf();
		void Add_Ovf_Un();
		void And();
		void Arglist();
		void Beq(Label target);
		void Beq_S(Label target);
		void Bge(Label target);
		void Bge_S(Label target);
		void Bge_Un(Label target);
		void Bge_Un_S(Label target);
		void Bgt(Label target);
		void Bgt_S(Label target);
		void Bgt_Un(Label target);
		void Bgt_Un_S(Label target);
		void Ble(Label target);
		void Ble_S(Label target);
		void Ble_Un(Label target);
		void Ble_Un_S(Label target);
		void Blt(Label target);
		void Blt_S(Label target);
		void Blt_Un(Label target);
		void Blt_Un_S(Label target);
		void Bne_Un(Label target);
		void Bne_Un_S(Label target);
		void Box(Type valueType);
		void Conv_Ovf_I2_Un();
		void Ldelem_I();
		void Conv_Ovf_I4();
		void Conv_Ovf_I8();
		void Jmp(MethodInfo target);
		void Ldarg(short arg);
		void Ldarg_0();
		void Ldarg_1();
		void Ldarg_2();
		void Ldarg_3();
		void Ldarg_S(byte index);
		void Ldarga(short index);
		void Ldarga_S(byte index);
		void Ldc_I4(int n);
		void Ldc_I4_0();
		void Isinst(Type type);
		void Ldc_I4_1();
		void Ldc_I4_3();
		void Ldc_I4_4();
		void Ldc_I4_5();
		void Ldc_I4_6();
		void Ldc_I4_7();
		void Ldc_I4_8();
		void Ldc_I4_M1();
		void Ldc_I4_S(byte index);
		void Ldc_I8(long arg);
		void Ldc_R4(float arg);
		void Ldc_R8(double arg);
		void Ldc_I4_2();
		void Initobj(Type type);
		void Initblk();
		void Endfinally();
		void Conv_Ovf_I8_Un();
		void Conv_Ovf_U();
		void Conv_Ovf_U_Un();
		void Conv_Ovf_U1();
		void Conv_Ovf_U1_Un();
		void Conv_Ovf_U2();
		void Conv_Ovf_U2_Un();
		void Conv_Ovf_U4();
		void Conv_Ovf_U4_Un();
		void Conv_Ovf_U8();
		void Conv_Ovf_U8_Un();
		void Conv_R_Un();
		void Conv_R4();
		void Conv_R8();
		void Conv_U();
		void Conv_U1();
		void Conv_U2();
		void Conv_U4();
		void Conv_U8();
		void Cpblk();
		void Cpobj(Type type);
		void Div();
		void Div_Un();
		void Dup();
		void Endfilter(object arg);
		void Conv_Ovf_I4_Un();
		void Calli(CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Type[] optionalParameterTypes);
	}
}
